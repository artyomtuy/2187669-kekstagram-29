{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/util.js","webpack:///./js/gallery.js","webpack:///./js/backend.js","webpack:///./js/photo.js","webpack:///./js/preview.js","webpack:///./js/form.js","webpack:///./js/resize.js","webpack:///./js/effects.js","webpack:///./js/scale.js","webpack:///./js/form-validation.js","webpack:///./js/upload-file.js","webpack:///./js/filter.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getRandomNumber","min","max","Math","floor","random","getRandomArrayElement","initialArray","needRemove","arguments","length","undefined","randomElementIndex","randomElement","splice","lastTimeout","getRandomArray","copiedArray","slice","iter","acc","array","getArrayWithoutElement","deletedElement","reduce","concat","_toConsumableArray","removeChildren","parent","lastChild","removeChild","runOnEscPress","evt","action","keyCode","runOnEnterPress","debounce","cb","debounceInterval","window","clearTimeout","setTimeout","form","backend","filter","container","document","querySelector","uploadButton","errorPopup","errorPopupClose","errorPopupMessage","photos","photoElements","renderPhotos","photoArray","fragment","createDocumentFragment","map","photo","forEach","photoNode","appendChild","onSuccess","updatePhotos","it","data","Photo","initialize","onErrorPopupCloseClick","classList","add","removeEventListener","onError","message","contains","remove","textContent","addEventListener","load","URL","ErrorStatus","400","401","404","500","createRequest","xhr","XMLHttpRequest","responseType","status","response","timeout","open","send","upload","preview","template","content","_ref","url","likes","comments","description","_classCallCheck","this","_this","cloneNode","photoSource","photoComments","photoLikes","src","util","bodyElement","previewClose","previewImage","commentsCountBlock","commentsLoadMoreButton","commentsLoaded","previewCaption","previewLikes","previewCommentsBlock","commentsCounter","renderComments","commentsArray","commentsBlockElements","comment","avatar","createCommentTemplate","insertAdjacentHTML","join","count","showCommentsLoadedCount","onCommentsLoadMoreButtonClick","hideCommentsLoadMoreButton","onCommentsLoadMoreButtonEnterPress","fillPreview","photoData","onPreviewCloseClick","onPreviewEscPress","resize","effects","validation","uploadForm","hashTagsField","commentField","editPanel","editPanelClose","uploadErrorBLock","uploadErrorMessage","uploadedPicture","effectsPreviews","querySelectorAll","uploadMessage","FILE_TYPES","onSuccessUpload","reset","onEditPanelCloseClick","onErrorUpload","onUploadFormSubmit","FormData","preventDefault","finalize","onEditPanelEscPress","target","file","files","_uploadFile2","default","readingResult","Array","from","effect","style","backgroundImage","resizeMinus","resizePlus","resizeValue","picturePreview","PictureSize","currentPictureSize","setPictureSize","size","onResizeMinusClick","onResizePlusClick","scale","effectLevel","effectPanel","effectToggles","defaultEffect","chrome","setFilter","sepia","marvin","phobos","heat","none","currentPictureClass","setPictureClass","effectName","setPictureEffect","effectValue","currentEffect","getEffectValue","onEffectToggleClick","selectedEffect","hide","show","setPinAction","setPinPosition","effectToggle","checked","scalePanel","scalePin","scaleLevel","scaleLine","pin","onScalePinMouseDown","round","left","width","scaleWidth","offsetWidth","startCoord","clientX","cursor","documentElement","onMouseMove","moveEvt","shift","currentCoord","offsetLeft","onMouseUp","upEvt","submitButton","HashTag","SYMBOL","checkActions","check","arg","some","index","arr","indexOf","checkHashTags","find","getCheckAction","str","split","toLowerCase","getHashTagsArray","setCustomValidity","_len","fields","_key","field","clearCustomValidity","checkComment","element","border","ERROR_STYLE","setErrorValidStyle","resetErrorValidStyle","fileTypes","fileName","fileType","endsWith","reader","FileReader","result","readAsDataURL","gallery","filtersContainer","filters","currentFilter","filterNameToFunction","filter-recommended","filter-popular","sort","x","y","filter-discussed","filter-random","filterPhotos","appliedFilter","setCurrentFilter","filteredPhotos","id"],"mappings":"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","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","const ESC_KEY_CODE = 27;\nconst ENTER_KEY_CODE = 13;\n\nexport /**\n * Возвращает целое случайное число из отрезка [min, max]\n *\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nconst getRandomNumber = (min, max) =>\n  Math.floor(Math.random() * (max + 1 - min)) + min;\n\nexport /**\n * Возвращает случайный элемент массива initialArray и при необходимости удаляет его из массива\n *\n * @param {Array}   initialArray\n * @param {boolean} [needRemove=false] True - элемент удаляется из массива initialArray\n * @return {*}\n */\nconst getRandomArrayElement = (initialArray, needRemove = false) => {\n  const randomElementIndex = getRandomNumber(0, initialArray.length - 1);\n  const randomElement = initialArray[randomElementIndex];\n  if (needRemove) {\n    initialArray.splice(randomElementIndex, 1);\n  }\n\n  return randomElement;\n};\n\nexport /**\n * Возвращает массив случайной длины из отрезка [min, max], составленный\n * из уникальных случайных элементов массива initialArray\n *\n * @param {Array} initialArray Массив, из элементов которого формируется новый массив\n * @param {number} min Минимальная возможная длина возвращаемого массива (по умолчанию = 1)\n * @param {number} max Максимальная возможная длина возвращаемого массива (по умолчанию = длине массива initialArray)\n * @return {Array}\n */\nconst getRandomArray = (initialArray, min = 1, max = initialArray.length) => {\n  const copiedArray = initialArray.slice();\n  const length = getRandomNumber(min, max);\n\n  const iter = (acc, array) => {\n    if (acc.length === length) {\n      return acc;\n    }\n\n    const randomElement = getRandomArrayElement(array, true);\n    return iter([...acc, randomElement], array);\n  };\n\n  return iter([], copiedArray);\n};\n\nexport /**\n * Возвращает массив, равный массиву initialArray,\n * с иключенными элементами element\n *\n * @param {Array} initialArray\n * @param {*} deletedElement\n * @return {Array}\n */\nconst getArrayWithoutElement = (initialArray, deletedElement) =>\n  initialArray.reduce((acc, value) => value === deletedElement ? acc : [...acc, value], []);\n\nexport /**\n * Удаляет дочерние DOM-элементы у элемента parent\n *\n * @param {Node} parent\n */\nconst removeChildren = (parent) => {\n  while (parent.lastChild) {\n    parent.removeChild(parent.lastChild);\n  }\n};\n\nexport /**\n * Вызывает переданную функцию action, если нажатая клавиша - Esc\n *\n * @param {Event} evt\n * @param {function} action\n */\nconst runOnEscPress = (evt, action) => {\n  if (evt.keyCode === ESC_KEY_CODE) {\n    action();\n  }\n};\n\nexport /**\n * Вызывает переданную функцию action, если нажатая клавиша - Enter\n *\n * @param {Event} evt\n * @param {function} action\n */\nconst runOnEnterPress = (evt, action) => {\n  if (evt.keyCode === ENTER_KEY_CODE) {\n    action();\n  }\n};\n\nlet lastTimeout;\n\nexport /**\n * Откладывает выполнение функции cb на время debounceInterval\n * и предотвращает 'дребезг' при повтороном обращении к фукнции cb раньше,\n * чем через время debounceInterval\n *\n * @param {function} cb Выполняемая функция\n * @param {number} debounceInterval Время в мс\n */\nconst debounce = (cb, debounceInterval) => {\n  if (lastTimeout) {\n    window.clearTimeout(lastTimeout);\n  }\n  lastTimeout = window.setTimeout(cb, debounceInterval);\n};\n","import Photo from './photo.js';\nimport * as form from './form.js';\nimport * as backend from './backend.js';\nimport * as filter from './filter.js';\n\n// DOM-элемент, в котором размещаются фотографии пользователей\nconst container = document.querySelector(`.pictures`);\n\n// Форма загрузки изображения\nconst uploadForm = document.querySelector(`.img-upload__form`);\n\n// Кнопка загрузки изображения\nconst uploadButton = uploadForm.querySelector(`#upload-file`);\n\n// Поп-ап для вывода возможной ошибки при загрузке и его элементы\nconst errorPopup = document.querySelector(`.error-popup`);\nconst errorPopupClose = errorPopup.querySelector(`.error-popup__cancel`);\nconst errorPopupMessage = errorPopup.querySelector(`.error-popup__message`);\n\nconst POPAP_ERROR_INTERVAL = 5000;\n\nlet photos = [];\nlet photoElements = [];\n\n/**\n * Отображает DOM-элементы `Фотография`, созданный на основе массива объектов Photo,\n * на странице\n *\n * @param {Array.<Photo>} photoArray\n */\nconst renderPhotos = (photoArray) => {\n  const fragment = document.createDocumentFragment();\n  photoElements = photoArray.map((photo) => photo.create());\n  photoElements.forEach((photoNode) => fragment.appendChild(photoNode));\n\n  container.appendChild(fragment);\n};\n\n/**\n * Удаляет DOM-элементы `Фотография` photoElements\n *\n */\nconst removePhotos = () => {\n  photoElements.forEach((it) => container.removeChild(it));\n};\n\nexport /**\n * Обновляет DOM-элементы `Фотография` после фильтрации\n *\n * @param {Array.<Photo>} photoArray\n */\nconst updatePhotos = (photoArray) => {\n  removePhotos();\n  renderPhotos(photoArray);\n};\n\n/**\n * Форматирует полученные данные и отображает их,\n * инициализирует работу фильтрации\n *\n * @param {Array.<Object>} data Загруженные с сервера данные\n */\nconst onSuccess = (data) => {\n  photos = data\n      .map((it) => new Photo(it));\n  renderPhotos(photos);\n  filter.initialize(photos);\n};\n\n/**\n * Закрывает поп-ап с сообщением об ошибке\n *\n */\nconst onErrorPopupCloseClick = () => {\n  errorPopup.classList.add(`hidden`);\n  errorPopupClose.removeEventListener(`click`, onErrorPopupCloseClick);\n};\n\n/**\n * Показывает поп-ап с сообщением об ошибке\n *\n * @param {string} message\n */\nconst onError = (message) => {\n  if (errorPopup.classList.contains(`hidden`)) {\n    errorPopup.classList.remove(`hidden`);\n    errorPopupMessage.textContent = message;\n    setTimeout(onErrorPopupCloseClick, POPAP_ERROR_INTERVAL);\n    errorPopupClose.addEventListener(`click`, onErrorPopupCloseClick);\n  }\n};\n\n/**\n * Инициализирует работу со страницей сайта\n *\n */\nconst initialize = () => {\n  // Загружает с сервера фотографии и отображает их.\n  // В случае ошибки загрузки данных показывает поп-ап с описанием ошибки\n  backend.load(onSuccess, onError);\n\n  // Инициирует работу с загруженной фотографией\n  // при нажатии на кнопку uploadButton\n  uploadButton.addEventListener(`change`, form.initialize);\n};\n\ninitialize();\n","\nconst URL = `https://js.dump.academy/kekstagram`;\nconst SUCCESS_STATUS = 200;\nconst REQUEST_TIMEOUT = 5000;\n\nconst ErrorStatus = {\n  400: `Неверный запрос`,\n  401: `Пользователь не авторизован`,\n  404: `Ничего на найдено`,\n  500: `Внутренняя ошибка сервера`\n};\n\n/**\n * Возвращает новый объект XMLHttpRequest\n *\n * @param  {function} onSuccess Коллбэк, срабатывает при при успешном выполнении запроса\n * @param  {function} onError Коллбэк, срабатывает при при неуспешном выполнении запроса\n * @return {XMLHttpRequest} Объект XMLHttpRequest\n */\nconst createRequest = (onSuccess, onError) => {\n  const xhr = new XMLHttpRequest();\n\n  xhr.responseType = `json`;\n\n  xhr.addEventListener(`load`, () => {\n    if (xhr.status === SUCCESS_STATUS) {\n      onSuccess(xhr.response);\n    } else {\n      onError(`${xhr.status}: ${ErrorStatus[xhr.status]}`);\n    }\n  });\n\n  xhr.addEventListener(`error`, () =>\n    onError(`Произошла ошибка соединения`));\n\n  xhr.addEventListener(`timeout`, () =>\n    onError(`Запрос не успел выполниться за ${xhr.timeout} мс`));\n\n  xhr.timeout = REQUEST_TIMEOUT;\n\n  return xhr;\n};\n\nexport /**\n * Получает данные с сервера\n *\n * @param  {function} onSuccess Коллбэк, срабатывает при при успешном выполнении запроса\n * @param  {function} onError Коллбэк, срабатывает при при неуспешном выполнении запроса\n */\nconst load = (onSuccess, onError) => {\n  const xhr = createRequest(onSuccess, onError);\n\n  xhr.open(`GET`, `${URL}/data`);\n  xhr.send();\n};\n\nexport /**\n * Отправляет данные data на сервер\n *\n * @param  {*} data\n * @param  {function} onSuccess Коллбэк, срабатывает при при успешной отправке данных\n * @param  {function} onError Коллбэк, срабатывает при при неуспешной отправке данных\n */\nconst upload = (data, onSuccess, onError) => {\n  const xhr = createRequest(onSuccess, onError);\n\n  xhr.open(`POST`, URL);\n  xhr.send(data);\n};\n","import * as preview from './preview';\n\n// Шаблон для фотографии пользователя\nconst template = document.querySelector(`#picture`)\n    .content\n    .querySelector(`.picture__link`);\n\nexport default /**\n * Формирует объект типа `Фотография` и метод для создания\n * DOM-элемент `Фотография`\n *\n * @class Photo\n */\nclass Photo {\n  constructor({url, likes, comments, description}) {\n    this.url = url;\n    this.likes = likes;\n    this.comments = comments;\n    this.description = description;\n  }\n\n  /**\n   * Возвращает DOM-элемент `Фотография`\n   *\n   * @memberof Photo\n   * @return {Node}\n   */\n  create() {\n    const photo = template.cloneNode(true);\n    const photoSource = photo.querySelector(`.picture__img`);\n    const photoComments = photo.querySelector(`.picture__stat--comments`);\n    const photoLikes = photo.querySelector(`.picture__stat--likes`);\n\n    photoSource.src = this.url;\n    photoComments.textContent = this.comments.length;\n    photoLikes.textContent = this.likes;\n\n    // При нажатии на DOM-элемент `Фотография` открывается его полноэкранная версия\n    photo.addEventListener(`click`, () => {\n      preview.open(this);\n    });\n\n    return photo;\n  }\n}\n","import * as util from './util';\n\nconst bodyElement = document.querySelector(`body`);\nconst preview = document.querySelector(`.big-picture`);\nconst previewClose = preview.querySelector(`.cancel`);\nconst previewImage = preview.querySelector(`.big-picture__img`)\n    .querySelector(`img`);\nconst commentsCountBlock = preview.querySelector(`.social__comment-count`);\nconst commentsLoadMoreButton = preview.querySelector(`.social__comment-loadmore`);\nconst commentsLoaded = preview.querySelector(`.comments-loaded`);\nconst previewCaption = preview.querySelector(`.social__caption`);\nconst previewLikes = preview.querySelector(`.likes-count`);\nconst previewCommentsBlock = preview.querySelector(`.social__comments`);\nconst COMMENTS_STEP = 5;\n\nlet comments = [];\nlet commentsCounter = 0;\n\n/**\n * Возвращает шаблон DOM-элемента для комментария comment\n *\n * @param {string} comment\n * @return {string}\n */\nconst createCommentTemplate = (comment) =>\n  `<li class=\"social__comment social__comment--text\">\n  <img class=\"social__picture\" src=\"${comment.avatar}\"\n  alt=\"Аватар комментатора фотографии\" width=\"35\" height=\"35\">${comment.message}</li>`;\n\n/**\n * Показывает количество загруженных комментариев\n *\n * @param {number} count\n */\nconst showCommentsLoadedCount = (count) => {\n  commentsLoaded.textContent = count;\n};\n\n/**\n * Вставляет сформированные на основе комментариев commentsArray\n * элементы в блок previewCommentsBlock,\n * показвает число загруженных комментариев commentsCounter\n *\n * @param {Array<String>} commentsArray\n */\nconst renderComments = (commentsArray) => {\n  const commentsBlockElements = commentsArray\n      .map((comment) => createCommentTemplate(comment));\n  previewCommentsBlock.insertAdjacentHTML(`beforeend`, commentsBlockElements.join(``));\n  commentsCounter += commentsArray.length;\n  showCommentsLoadedCount(commentsCounter);\n};\n\n/**\n * Если оставшихся для отображения комментариев меньше COMMENTS_STEP,\n * то скрывает кнопку подгрузки новых комментариев.\n * Отображает не более COMMENTS_STEP комментариев\n *\n */\nconst onCommentsLoadMoreButtonClick = () => {\n  if (comments.length <= COMMENTS_STEP) {\n    hideCommentsLoadMoreButton();\n  }\n  renderComments(comments.splice(0, COMMENTS_STEP));\n};\n\n/**\n * Выполняет функцию onCommentsLoadMoreButtonClick при нажатии на ENTER\n *\n * @param {Event} evt\n */\nconst onCommentsLoadMoreButtonEnterPress = (evt) => {\n  util.runOnEnterPress(evt, onCommentsLoadMoreButtonClick);\n};\n\n/**\n * Показывает кнопку подгрузки новых комментариев\n * и добавляет обработчики событий на кнопку\n *\n */\nconst showCommentsLoadMoreButton = () => {\n  commentsLoadMoreButton.classList.remove(`hidden`);\n  commentsLoadMoreButton.addEventListener(`click`, onCommentsLoadMoreButtonClick);\n  commentsLoadMoreButton.addEventListener(`keydown`, onCommentsLoadMoreButtonEnterPress);\n};\n\n/**\n * Скрывает кнопку подгрузки новых комментариев\n * и удаляет обработчики событий с кнопки\n *\n */\nconst hideCommentsLoadMoreButton = () => {\n  commentsLoadMoreButton.classList.add(`hidden`);\n  commentsLoadMoreButton.removeEventListener(`click`, onCommentsLoadMoreButtonClick);\n  commentsLoadMoreButton.removeEventListener(`keydown`, onCommentsLoadMoreButtonEnterPress);\n};\n\n/**\n * Показывает блок с количеством комментариев\n * и отображает не более COMMENTS_STEP комментариев\n *\n */\nconst showCommentsCountBlock = () => {\n  commentsCountBlock.classList.remove(`hidden`);\n  renderComments(comments.splice(0, COMMENTS_STEP));\n};\n\n/**\n * Скрывает блок с количеством комментариев\n *\n */\nconst hideCommentsCountBlock = () => {\n  commentsCountBlock.classList.add(`hidden`);\n};\n\n/**\n * Наполняет DOM-элемент `Фотография в полноэкранном режиме` данными объекта photoData\n *\n * @param {Object} photoData\n */\nconst fillPreview = (photoData) => {\n  previewImage.src = photoData.url;\n  previewCaption.textContent = photoData.description;\n  previewLikes.textContent = photoData.likes;\n\n  util.removeChildren(previewCommentsBlock);\n\n  comments = photoData.comments.slice();\n  commentsCountBlock.querySelector(`.comments-count`).textContent = comments.length;\n\n  showCommentsCountBlock();\n\n  // В зависимости от количества комментариев показывает\n  // или скрывает блок загрузки новых комментариев\n  if (photoData.comments.length <= COMMENTS_STEP) {\n    hideCommentsLoadMoreButton();\n  } else {\n    showCommentsLoadMoreButton();\n  }\n};\n\n/**\n * Закрывает поп-ап с полноэкранной версией фотографии\n *\n */\nconst onPreviewCloseClick = () => {\n  comments = [];\n  commentsCounter = 0;\n  bodyElement.classList.remove(`modal-open`);\n  preview.classList.add(`hidden`);\n  hideCommentsCountBlock();\n  previewClose.removeEventListener(`click`, onPreviewCloseClick);\n  document.removeEventListener(`keydown`, onPreviewEscPress);\n};\n\n/**\n * Закрывает поп-ап с полноэкранной версией фотографии при нажатии на ESC\n *\n * @param {Event} evt\n */\nconst onPreviewEscPress = (evt) => {\n  util.runOnEscPress(evt, onPreviewCloseClick);\n};\n\nexport /**\n * Открывает поп-ап с полноэкранной версией фотографии\n *\n * @param {Object} photoData\n */\nconst open = (photoData) => {\n  bodyElement.classList.add(`modal-open`);\n  preview.classList.remove(`hidden`);\n  previewClose.addEventListener(`click`, onPreviewCloseClick);\n  document.addEventListener(`keydown`, onPreviewEscPress);\n  fillPreview(photoData);\n};\n","import * as util from './util.js';\nimport * as resize from './resize.js';\nimport * as effects from './effects.js';\nimport * as backend from './backend.js';\nimport * as validation from './form-validation';\nimport uploadFile from './upload-file.js';\n\nconst bodyElement = document.querySelector(`body`);\nconst uploadButton = document.querySelector(`#upload-file`);\nconst uploadForm = document.querySelector(`.img-upload__form`);\nconst hashTagsField = uploadForm.querySelector(`.text__hashtags`);\nconst commentField = uploadForm.querySelector(`.text__description`);\n\nconst editPanel = document.querySelector(`.img-upload__overlay`);\nconst editPanelClose = editPanel.querySelector(`#upload-cancel`);\n\nconst uploadErrorBLock = uploadForm.querySelector(`.img-upload__message--error`);\nconst uploadErrorMessage = uploadErrorBLock.querySelector(`.error__message`);\n\nconst uploadedPicture = editPanel.querySelector(`.img-upload__preview > img`);\nconst effectsPreviews = editPanel.querySelectorAll(`.effects__preview`);\nconst uploadMessage = uploadForm.querySelector(`.img-upload__message--loading`);\n\nconst FILE_TYPES = [`gif`, `jpg`, `jpeg`, `png`];\n\n/**\n * При успешной отправке формы очищает ее поля\n * и закрывает панель редактирования\n *\n */\nconst onSuccessUpload = () => {\n  uploadForm.reset();\n  onEditPanelCloseClick();\n};\n\n/**\n * При неуспешной отправке формы закрывает панель редактирования\n * и показывает блок с ошибкой message\n *\n * @param {string} message\n */\nconst onErrorUpload = (message) => {\n  onEditPanelCloseClick();\n  uploadErrorBLock.classList.remove(`hidden`);\n  uploadErrorMessage.textContent = message;\n};\n\n/**\n * Отменяет действия по умолчанию при отправке формы\n * и запускает функцию отправки данных на сервер\n *\n * @param {Event} evt\n */\nconst onUploadFormSubmit = (evt) => {\n  backend.upload(new FormData(uploadForm), onSuccessUpload, onErrorUpload);\n  evt.preventDefault();\n};\n\n/**\n * Закрывает панель редактирования фотографии,\n * восстанавливает стандартные значения всем элементам формы,\n * удаляет обработчики событий с недоступных более элементов\n *\n */\nconst onEditPanelCloseClick = () => {\n  uploadForm.reset();\n  uploadButton.value = ``;\n  resize.finalize();\n  effects.finalize();\n  bodyElement.classList.remove(`modal-open`);\n  editPanel.classList.add(`hidden`);\n  editPanelClose.removeEventListener(`click`, onEditPanelCloseClick);\n  document.removeEventListener(`keydown`, onEditPanelEscPress);\n};\n\n/**\n * Закрывает панель редактирования фотографии при нажатии на ESC\n *\n * @param {Event} evt\n */\nconst onEditPanelEscPress = (evt) => {\n  if (evt.target !== hashTagsField && evt.target !== commentField) {\n    util.runOnEscPress(evt, onEditPanelCloseClick);\n  }\n};\n\n/**\n * Показывает панель редактирования фотографии,\n * добавляет обработчики событий,\n * инициирует валидацию, масштабиование\n * и применение эффектов\n *\n */\nconst openUploadForm = () => {\n  validation.initialize();\n  resize.initialize();\n  effects.initialize();\n  bodyElement.classList.add(`modal-open`);\n  editPanel.classList.remove(`hidden`);\n  editPanelClose.addEventListener(`click`, onEditPanelCloseClick);\n  document.addEventListener(`keydown`, onEditPanelEscPress);\n  uploadForm.addEventListener(`submit`, onUploadFormSubmit);\n};\n\nexport /**\n * Инициирует работу с загруженной фотографией\n *\n * @param {Event} evt\n */\nconst initialize = (evt) => {\n  uploadMessage.classList.remove(`hidden`);\n  const file = evt.target.files[0];\n\n  // Результат чтения загруженной фотографии помещает в атрибут\n  // src элемента uploadedPicture и в качестве фонового изображения\n  // для превью эффектов\n  uploadFile(file, FILE_TYPES, (readingResult) => {\n    uploadedPicture.src = readingResult;\n    Array.from(effectsPreviews).forEach((effect) => {\n      effect.style.backgroundImage = `url(${readingResult})`;\n    });\n\n    openUploadForm();\n    uploadMessage.classList.add(`hidden`);\n  });\n};\n","const uploadForm = document.querySelector(`.img-upload__form`);\nconst resizeMinus = uploadForm.querySelector(`.resize__control--minus`);\nconst resizePlus = uploadForm.querySelector(`.resize__control--plus`);\nconst resizeValue = uploadForm.querySelector(`.resize__control--value`);\nconst picturePreview = uploadForm.querySelector(`.img-upload__preview`);\n\nconst PictureSize = {\n  MIN: 25,\n  MAX: 100,\n  DEFAULT: 100,\n  STEP: 25\n};\n\nlet currentPictureSize = 100;\n\n/**\n * Записывает новый масштаб изображения size в поле resizeValue\n * м масштабирует изображение picturePreview на величину size\n * через задание ему стиля `transform: scale(size / 100)`\n *\n * @param {number} size\n */\nconst setPictureSize = (size) => {\n  resizeValue.value = `${size}%`;\n  picturePreview.style = `transform: scale(${size / 100})`;\n  currentPictureSize = size;\n};\n\n/**\n * Уменьшает масштаб изображения на величину PictureSize.STEP\n * и записывает новый масштаб изображения в поле resizeValue\n *\n */\nconst onResizeMinusClick = () => {\n  if (currentPictureSize > PictureSize.MIN) {\n    const newSize = currentPictureSize - PictureSize.STEP;\n    setPictureSize(newSize);\n  }\n};\n\n/**\n * Увеличивает масштаб изображения на величину PictureSize.STEP\n * и записывает новый масштаб изображения в поле resizeValue\n *\n */\nconst onResizePlusClick = () => {\n  if (currentPictureSize < PictureSize.MAX) {\n    const newSize = currentPictureSize + PictureSize.STEP;\n    setPictureSize(newSize);\n  }\n};\n\nexport /**\n * Устанавливает масштаб PictureSize.DEFAULT загруженному изображению\n * и добавляет обработчики на кнопки масштабирования изображения\n *\n */\nconst initialize = () => {\n  setPictureSize(PictureSize.DEFAULT);\n  resizeMinus.addEventListener(`click`, onResizeMinusClick);\n  resizePlus.addEventListener(`click`, onResizePlusClick);\n};\n\nexport /**\n * Удаляет обработчики с кнопок масштабирования изображения\n *\n */\nconst finalize = () => {\n  resizeMinus.removeEventListener(`click`, onResizeMinusClick);\n  resizePlus.removeEventListener(`click`, onResizePlusClick);\n};\n","import * as scale from './scale.js';\n\nconst editPanel = document.querySelector(`.img-upload__overlay`);\nconst scalePanel = editPanel.querySelector(`.scale`);\nconst effectLevel = scalePanel.querySelector(`.scale__value`);\nconst effectPanel = editPanel.querySelector(`.effects`);\nconst effectToggles = effectPanel.querySelectorAll(`.effects__radio`);\nconst defaultEffect = effectPanel.querySelector(`#effect-none`);\nconst uploadedPicture = editPanel.querySelector(`.img-upload__preview > img`);\n\nconst EFFECT_MAX_LEVEL = 100;\n\nconst effects = {\n  chrome: {\n    min: 0,\n    max: 1,\n    setFilter: (value) => `grayscale(${value})`\n  },\n  sepia: {\n    min: 0,\n    max: 1,\n    setFilter: (value) => `sepia(${value})`\n  },\n  marvin: {\n    min: 0,\n    max: 100,\n    setFilter: (value) => `invert(${value}%)`\n  },\n  phobos: {\n    min: 0,\n    max: 3,\n    setFilter: (value) => `blur(${value}px)`\n  },\n  heat: {\n    min: 1,\n    max: 3,\n    setFilter: (value) => `brightness(${value})`\n  },\n  none: {\n    min: 0,\n    max: 0,\n    setFilter: () => `none`\n  }\n};\n\nlet currentPictureClass;\n\n/**\n * Устанавливает класс загруженному изображению\n * в соответствии с effectName\n *\n * @param {string} effectName\n */\nconst setPictureClass = (effectName) => {\n  if (currentPictureClass) {\n    uploadedPicture.classList.remove(currentPictureClass);\n  }\n  uploadedPicture.classList.add(`effects__preview--${effectName}`);\n  currentPictureClass = `effects__preview--${effectName}`;\n};\n\n/**\n * Возвращает отмасштабированное в соответствии с effectName\n * значение для эффекта\n *\n * @param {number} value Значение до масштабирования: от 0 до 100\n * @param {string} effectName Примененный эффект\n * @return {number} Отмасштабированное значение\n */\nconst getEffectValue = (value, effectName) => {\n  const currentEffect = effects[effectName];\n  return currentEffect.min + value * (currentEffect.max - currentEffect.min) / EFFECT_MAX_LEVEL;\n};\n\n/**\n * Устанавливает стиль для загруженного изображения\n * в зависимости от примененного эффекта effectName\n *\n * @param {string} effectName\n */\nconst setPictureEffect = (effectName) => {\n  const effectValue = getEffectValue(effectLevel.value, effectName);\n  uploadedPicture.style.filter = effects[effectName].setFilter(effectValue);\n};\n\n/**\n * В зависимости от выбранного эффекта скрывает или показывает\n * ползунок scalePanel; передает эффект и функцию применения эффекта\n * для пина ползунка; устанавливает пин ползунка в максимальное\n * положение; устанавливает класс и стиль на загруженное изображение\n *\n * @param {Event} evt\n */\nconst onEffectToggleClick = (evt) => {\n  const selectedEffect = evt.target;\n  if (selectedEffect === defaultEffect) {\n    scale.hide();\n  } else {\n    scale.show();\n    scale.setPinAction(selectedEffect.value, setPictureEffect);\n  }\n  scale.setPinPosition(EFFECT_MAX_LEVEL);\n  setPictureClass(selectedEffect.value);\n  setPictureEffect(selectedEffect.value);\n};\n\nexport /**\n * Устанавливает обработчики событий на переключатели эффектов;\n * устанавливает класс и стиль `без эффектов` загруженному изображению\n * и скрывает ползунок scalePanel\n *\n */\nconst initialize = () => {\n  Array.from(effectToggles).forEach((effectToggle) =>\n    effectToggle.addEventListener(`click`, onEffectToggleClick));\n  defaultEffect.checked = true;\n  setPictureClass(defaultEffect.value);\n  setPictureEffect(defaultEffect.value);\n  scale.hide();\n};\n\nexport /**\n * Удаляет обработчики событий с переключателей эффектов\n *\n */\nconst finalize = () => {\n  Array.from(effectToggles).forEach((effectToggle) =>\n    effectToggle.removeEventListener(`click`, onEffectToggleClick));\n};\n","const editPanel = document.querySelector(`.img-upload__overlay`);\nconst scalePanel = editPanel.querySelector(`.scale`);\nconst effectLevel = scalePanel.querySelector(`.scale__value`);\nconst scalePin = scalePanel.querySelector(`.scale__pin`);\nconst scaleLevel = scalePanel.querySelector(`.scale__level`);\nconst scaleLine = scalePanel.querySelector(`.scale__line`);\nconst EFFECT_MAX_LEVEL = 100;\nlet pin;\n\nexport /**\n * Скрывает ползунок scale и удаляет обработчик событий\n * с пина ползунка\n *\n */\nconst hide = () => {\n  scalePanel.classList.add(`hidden`);\n  scalePin.removeEventListener(`mousedown`, onScalePinMouseDown);\n};\n\nexport /**\n * Показывает ползунок scale и добавлляет обработчик событий\n * для пина ползунка\n *\n */\nconst show = () => {\n  if (scalePanel.classList.contains(`hidden`)) {\n    scalePanel.classList.remove(`hidden`);\n    scalePin.addEventListener(`mousedown`, onScalePinMouseDown);\n  }\n};\n\nexport /**\n * Присваивает уровню эффекта effectLevel значение value;\n * перемещает пин ползунка в соответствии с величиной value\n *\n * @param {number} value Значение от 0 до 100\n */\nconst setPinPosition = (value) => {\n  effectLevel.value = Math.round(value);\n  scalePin.style.left = `${value}%`;\n  scaleLevel.style.width = `${value}%`;\n};\n\nexport /**\n * Присваивает переменной pin значения примененного эффекта\n * и функции, используюшейся при перемещении пина\n *\n * @param {string} effect\n * @param {function} action\n */\nconst setPinAction = (effect, action) => {\n  pin = {\n    effect,\n    action\n  };\n};\n\n/**\n * Перемещает пин позунка и в зависимости от его положения\n * применяет эффекты к изображению\n *\n * @param {Event} evt\n */\nconst onScalePinMouseDown = (evt) => {\n  evt.preventDefault();\n  const scaleWidth = scaleLine.offsetWidth;\n\n  let startCoord = evt.clientX;\n\n  scalePin.style.cursor = `none`;\n  document.documentElement.style.cursor = `none`;\n\n  const onMouseMove = (moveEvt) => {\n    moveEvt.preventDefault();\n\n    const shift = startCoord - moveEvt.clientX;\n    startCoord = moveEvt.clientX;\n\n    let currentCoord = scalePin.offsetLeft - shift;\n\n    if (currentCoord < 0) {\n      currentCoord = 0;\n    } else if (currentCoord > scaleWidth) {\n      currentCoord = scaleWidth;\n    }\n\n    const currentValue = currentCoord * EFFECT_MAX_LEVEL / scaleWidth;\n\n    setPinPosition(currentValue);\n    pin.action(pin.effect);\n  };\n\n  const onMouseUp = (upEvt) => {\n    upEvt.preventDefault();\n\n    scalePin.style.cursor = `move`;\n    document.documentElement.style.cursor = `auto`;\n\n    document.removeEventListener(`mousemove`, onMouseMove);\n    document.removeEventListener(`mouseup`, onMouseUp);\n  };\n\n  document.addEventListener(`mousemove`, onMouseMove);\n  document.addEventListener(`mouseup`, onMouseUp);\n};\n","import * as util from './util.js';\n\nconst uploadForm = document.querySelector(`.img-upload__form`);\nconst hashTagsField = uploadForm.querySelector(`.text__hashtags`);\nconst commentField = uploadForm.querySelector(`.text__description`);\nconst submitButton = uploadForm.querySelector(`.img-upload__submit`);\n\nconst HashTag = {\n  SYMBOL: `#`,\n  MIN_SIZE: 2,\n  MAX_SIZE: 20,\n  AMOUNT: 5\n};\n\nconst COMMENT_MAX_SIZE = 140;\nconst ERROR_STYLE = `2px solid #ff0000`;\n\n/**\n * Выделяет неверно заполненные поля\n *\n * @param {Node} element\n */\nconst setErrorValidStyle = (element) => {\n  element.style.border = ERROR_STYLE;\n};\n\n/**\n * Отменяет выделение неверно заполненного поля\n *\n * @param {Node} element\n */\nconst resetErrorValidStyle = (element) => {\n  element.style.border = ``;\n};\n\n// Массив объектов, ставящих в соответствие функцию проверки\n// формата хэштегов и сообщение об его ошибке\nconst checkActions = [\n  {\n    message: false,\n    check: (arg) => arg.length === 0\n  },\n  {\n    message: `Хэш-тэгов должно быть не более ${HashTag.AMOUNT}`,\n    check: (arg) => arg.length > HashTag.AMOUNT\n  },\n  {\n    message: `Хэш-тэг должен начинаться с #`,\n    check: (arg) => arg.some((value) => value[0] !== HashTag.SYMBOL)\n  },\n  {\n    message: `Хэш-тэг должен состоять минимум из ${HashTag.MIN_SIZE} символов`,\n    check: (arg) => arg.some((value) => value.length < HashTag.MIN_SIZE)\n  },\n  {\n    message: `Хэш-тэг не должен превышать ${HashTag.MAX_SIZE} символов`,\n    check: (arg) => arg.some((value) => value.length > HashTag.MAX_SIZE)\n  },\n  {\n    message: `Хэш-тэги должны быть уникальными`,\n    check: (arg) => arg.some((value, index, arr) => arr.indexOf(value) !== index)\n  },\n  {\n    message: false,\n    check: (arg) => arg\n  },\n];\n\n/**\n * Возвращает первый объект массива checkActions,\n * у которого функция check\n * от аргумента arg возвращает true\n *\n * @param {Array} arg\n * @return {Object}\n */\nconst getCheckAction = (arg) => checkActions.find(({check}) => check(arg));\n\n/**\n * Возвращает массив, сформированный из строки str.\n * Переводит элементы массива в нижний регистр,\n * исключает пустые элементы\n *\n * @param {String} str\n * @return {Array}\n */\nconst getHashTagsArray = (str) => {\n  const arr = str.split(` `).map(((value) => value.toLowerCase()));\n  return util.getArrayWithoutElement(arr, ``);\n};\n\n/**\n * Проверяет правильность заполнения поля с хэштегами.\n * При неверно заполненном поле показывает сообщение об ошибке\n *\n * @param {String} data\n */\nconst checkHashTags = (data) => {\n  const hashTags = getHashTagsArray(data);\n  const {message} = getCheckAction(hashTags);\n  if (message) {\n    hashTagsField.setCustomValidity(message);\n  } else {\n    hashTagsField.setCustomValidity(``);\n  }\n};\n\n/**\n * Проверяет правильность заполнения поля с комментарием.\n * При неверно заполненном поле показывает сообщение об ошибке\n *\n * @param {String} data\n */\nconst checkComment = (data) => {\n  if (data.length > COMMENT_MAX_SIZE) {\n    commentField.setCustomValidity(`Длина комментария не должна\n    превышать ${COMMENT_MAX_SIZE} символов. Текущая длина сообщения ${data.length}`);\n  } else {\n    commentField.setCustomValidity(``);\n  }\n};\n\n/**\n * Скрывает сообщения о неверно заполненных полях fields\n * при событии input\n *\n * @param {Nodes} fields\n */\nconst clearCustomValidity = (...fields) => {\n  fields.forEach((field) => {\n    field.addEventListener(`input`, () => {\n      field.setCustomValidity(``);\n    });\n  });\n};\n\nexport /**\n * Инициирует проверку полей формы\n *\n */\nconst initialize = () => {\n  clearCustomValidity(hashTagsField, commentField);\n\n  submitButton.addEventListener(`click`, () => {\n    checkHashTags(hashTagsField.value);\n    checkComment(commentField.value);\n  });\n\n  uploadForm.addEventListener(`invalid`, function (evt) {\n    setErrorValidStyle(evt.target);\n  }, true);\n\n  uploadForm.addEventListener(`input`, function (evt) {\n    resetErrorValidStyle(evt.target);\n  });\n};\n","export default\n/**\n * Читает содержимое файла file и вызывает коллбэк cb\n * с результатом чтения содержимого файла в виде\n * URL, представляющего файл, закодированый в base64 строку\n *\n * @param {File} file\n * @param {Array<String>} fileTypes возможные типы файла\n * @param {Function} cb\n */\n(file, fileTypes, cb) => {\n  if (file) {\n    const fileName = file.name.toLowerCase();\n\n    const matches = fileTypes.some((fileType) => fileName.endsWith(fileType));\n\n    if (matches) {\n      const reader = new FileReader();\n\n      reader.addEventListener(`load`, () => {\n        cb(reader.result);\n      });\n\n      reader.readAsDataURL(file);\n    }\n  }\n};\n","import * as gallery from './gallery.js';\nimport * as util from './util.js';\n\nconst filtersContainer = document.querySelector(`.img-filters`);\nconst filters = filtersContainer.querySelectorAll(`.img-filters__button`);\nconst DEBOUNCE_INTERVAL = 500;\n\nlet currentFilter;\n\n/**\n * Устанавливает текущий применный фильтр\n * и добавляет ему класс для стилизации\n *\n * @param {Node} filter\n */\nconst setCurrentFilter = (filter) => {\n  if (currentFilter) {\n    currentFilter.classList.remove(`img-filters__button--active`);\n  }\n  filter.classList.add(`img-filters__button--active`);\n  currentFilter = filter;\n};\n\n/**\n * Возвращает переданный аргумент без изменений\n *\n * @param {*} value\n * @return {*}\n */\nconst identity = (value) => value;\n\n/**\n * Возвращает массив фотографий, отсортированный\n * по количеству лайков\n *\n * @param {Array.<Photo>} photos\n * @return {Array.<Photo>}\n */\nconst sortByLikes = (photos) =>\n  photos.slice().sort((x, y) => y.likes - x.likes);\n\n/**\n * Возвращает массив фотографий, отсортированный\n * по количеству комментариев\n *\n * @param {Array.<Photo>} photos\n * @return {Array.<Photo>}\n */\nconst sortByComments = (photos) =>\n  photos.slice().sort((x, y) => y.comments.length - x.comments.length);\n\n// Соответсвие выбранного фильтра функции фильтрации\nconst filterNameToFunction = {\n  'filter-recommended': identity,\n  'filter-popular': sortByLikes,\n  'filter-discussed': sortByComments,\n  'filter-random': util.getRandomArray\n};\n\nexport /**\n * В соответвтвии с выбранным фильтром применяет\n * фильтрацию для фотографий photos и вызывает функцию updatePhotos\n * для обновления DOM-элементов `Фотография` с предотвравщением дребезга\n *\n * @param {Event} evt\n * @param {Array.<Photo>} photos\n */\nconst filterPhotos = (evt, photos) => {\n  const appliedFilter = evt.target;\n\n  if (appliedFilter !== currentFilter) {\n    setCurrentFilter(appliedFilter);\n\n    const filteredPhotos = filterNameToFunction[appliedFilter.id](photos);\n    util.debounce(() => gallery.updatePhotos(filteredPhotos), DEBOUNCE_INTERVAL);\n  }\n};\n\nexport /**\n * Показывает блок с фильтрами,\n * устанавливает обработчики событий на переключатели фильтров\n *\n * @param {Array.<Photo>} photos\n */\nconst initialize = (photos) => {\n  filtersContainer.classList.remove(`img-filters--inactive`);\n  currentFilter = filters[0];\n  Array.from(filters).forEach((filter) =>\n    filter.addEventListener(`click`, (evt) => {\n      filterPhotos(evt, photos);\n    })\n  );\n};\n"],"sourceRoot":""}